#!/usr/bin/python3  -W ignore::DeprecationWarning
# -*- coding: utf-8 -*-

import os
import sys
import cgi
import re
import time
import math

#import cgitb
#cgitb.enable(logdir="/tmp")

sys.path.append('/home/envmonbox/lib/python/')
from perlish import *

latest_file = "/home/envmonbox/log/latest"

rawstr = ""
debugstr = ""


def post_file(fp):
        global rawstr
        global debugstr
        rawstr += "<ul>\n"
        valdict = dict()
        exdict = dict()
        mstr = ""
        for s in fp:
            s = chomp(s) # todo remove all whitespace, not just last trailing
#            m = re.match("\s+([a-zA-Z0-9]+):\s*([.-0-9]+)", s)
            m = re.search("\s+([a-zA-Z0-9_]+):\s*([-naNA.0-9]+)(.*)$", s)
            if(m):
                    mstr += str(m)
                    logtag = m.group(1)
                    valstr = m.group(2)
                    extra = m.group(3)
                    valdict[logtag] = valstr;
                    exdict[logtag] = extra;
            rawstr += "<li>" + s + "\n"
        rawstr += "</ul>"
        debugstr += "values:" + str(valdict) + "\n"
        debugstr += "extras:" + str(exdict)+ "\n"
        format_fdata(valdict, exdict)

def numfield(s):
        if(s == '-' or s == '' or s == 'None' or s == 'NaN'):
                return math.nan
        else:
                return float(s)

def format_fdata(valdict, exdict):
        # TODO redo as a table
        print("<ul>")
        rt_c = numfield(valdict.get('room_temp', ''))
        if(rt_c != math.nan):
                rt_f = rt_c * 1.8 + 32.0
                printf("<li> Room temperature: %.1f\n", rt_f)
                
        hum = numfield(valdict.get('room_humidity', ''))
        if(hum != math.nan):
                printf("<li> Room humidity: %.0f%%\n", hum)
        
        ot_c = numfield(valdict.get('outdoor_temp', ''))
        if(ot_c != math.nan):
                ot_f = ot_c * 1.8 + 32.0
                printf("<li> Outdoor: %.1f\n", ot_f)
                
        print("</ul>")

print("Content-type: text/html")
print()
print("""
<html>
<head><title>mybdata-test</title></head>
<body>
""")

try:
        fp = open(latest_file, "r")
        post_file(fp)
        fp.close()
        print("<hr/>raw data:<br/>\n")
        print("<pre>")
        print(rawstr)
        print("</pre>")
        print("<hr/>debug:<br/>\n")
        print("<pre>")
        print(debugstr)
        print("</pre>")

        
except OSError as e:
        print("<b>no data.  error:</b>\n")
        print("<pre>")
        print(str(e))
        print("</pre>")
        


print("""
</body>
</html>
""")

exit(0)

